fn p1(n: u32) -> bool {
    let mut a: u32 = 2;
    while a * a <= n {
        if n % a == 0 {
            return false;
        }
        a += 1;
    }
    return true;
}
fn p2(a: u32, b: u32) -> bool {
    let mut a1 = a;
    let mut b1 = b;
    while a1 != b1 {
        if a1 > b1 {
            a1 = a1 - b1;
        } else {
            b1 = b1 - a1;
        }
    }
    if a1 == 1 {
        return true;
    } else {
        return false;
    }
}
fn p3() {
    let mut nr = 99;
    while nr > 1 {
        println!("{} bottles of beer on the wall,", nr);
        println!("{} bottles of beer.", nr);
        println!("Take one down, pass it around.");
        nr -= 1;
        if nr == 1 {
            println!("{} bottle of beer on the wall", nr);
        } else {
            println!("{} bottles of beer on the wall", nr);
        }
        println!();
    }
    println!("1 bottle of beer on the wall,");
    println!("1 bottle of beer.");
    println!("Take one down, pass it around,");
    println!("No bottles of beer on the wall.");
}
fn main() {
    let mut i: u32 = 1;
    let val1: u32 = 100;
    while i < val1 {
        if p1(i) == true {
            println!("{}", i);
        }
        i += 1;
    }
    let mut ii: u32 = 1;
    let mut j: u32 = 1;
    while ii < 100 {
        while j < 100 {
            p2(ii, j);
            j += 1;
        }
        ii += 1;
    }
    println!("{}", p2(25,5));
    p3();
}

